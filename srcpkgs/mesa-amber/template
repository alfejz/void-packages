# Template file for 'mesa-amber'
pkgname=mesa-amber
version=21.3.9
revision=1
arch="x86-64*"
build_style=meson
configure_args="-Damber=true  -Ddri-drivers=i915,i965,r100,r200,nouveau 
 -Dgallium-drivers=swrast -Dvulkan-drivers=amd,intel -Dglvnd=true 
 -Dshared-glapi=enabled -Dgbm=enabled -Degl=enabled -Dosmesa=true 
 -Dgles1=enabled -Dgles2=enabled -Dglx=dri -Ddri3=enabled -Dlmsensors=enabled
 -Dplatforms=x11,wayland -Dvulkan-layers=device-select,overlay,intel-nullhw
 -Dllvm=enabled -Db_lto=false -Dcpp_std=gnu++14 -Db_ndebug=false 
 -Dlibunwind=enabled -Dmicrosoft-clc=disabled -Dvalgrind=enabled
 -Dglx-direct=true"
hostmakedepends="gettext flex llvm12 pkg-config python3-Mako glslang
 wayland-protocols wayland-devel valgrind clang cmake"
makedepends="elfutils-devel expat-devel libXdamage-devel libXvMC-devel
 libXxf86vm-devel libatomic-devel libdrm-devel libffi-devel libva-devel
 libvdpau-devel libxshmfence-devel ncurses-devel zlib-devel
 wayland-devel wayland-protocols llvm12 libsensors-devel
 libXrandr-devel libglvnd-devel libzstd-devel libxml2-devel lua53-devel
 libarchive-devel clang libclc vulkan-loader libunwind-devel libX11-devel
 libXfixes-devel valgrind-devel xorgproto cmake"
depends="libglvnd"
short_desc="Graphics library similar to SGI's OpenGL (classic non-gallium drivers)"
maintainer="Orphaned <orphan@voidlinux.org>"
license="MIT, LGPL-2.1-or-later"
homepage="https://www.mesa3d.org/"
changelog="https://docs.mesa3d.org/relnotes/${version}.html"
distfiles="https://mesa.freedesktop.org/archive/mesa-${version}.tar.xz"
checksum=91fe6f20339884e37a7c47bfba42fb1cd397512c9ed5ad423de369f047cd8b5c

shlib_provides="libEGL_amber.so.0 libGLX_amber.so.0"

replaces="mesa>=21.0.0"
conflicts="mesa"
provides="mesa-${version}_${revision}"

if [ "$XBPS_TARGET_LIBC" = "musl" ]; then
	configure_args+=" -Duse-elf-tls=false"
fi

# Set subpackages manually to set proper rdeps in 32bit pkgs.
subpackages="libglapi-amber libgbm-amber libOSMesa-amber 
 mesa-amber-ati-dri mesa-amber-vulkan-radeon mesa-amber-intel-dri
 mesa-amber-vulkan-intel mesa-amber-vulkan-overlay-layer
 MesaLib-amber-devel mesa-amber-nouveau-dri"

# Replace old mesa pkgs, superseded by libglvnd.
replaces+="libGL>=10_1<19.2.5_2 libEGL>=10_1<19.2.5_2 libGLES>=10_1<19.2.5_2"

# must be the last one for proper order
subpackages+=" mesa-amber-dri"

post_configure() {
	if [ "$CROSS_BUILD" ]; then
		find -iname "*.ninja" -exec sed -i "{}" \
			-e "s; /usr/lib/; ${XBPS_CROSS_BASE}/usr/lib/;g" \
			-e "s;-L/usr/lib;-L${XBPS_CROSS_BASE}/usr/lib;g" \
			-e "s;-I/usr/include;-I${XBPS_CROSS_BASE}/usr/include;g" \
			-e "s;-isystem;-I${XBPS_CROSS_BASE};g" \
			\;
	fi
}

post_install() {
	vlicense docs/license.rst

	# ensure that each eligible architecture ships its multilib icd files
	# in some cases, multiple counterpart architectures may exist (aarch64)
	# this allows us to not have to ship these files in the current *-32bit packages
	local arch=${XBPS_TARGET_MACHINE%-*}
	local oarchs
	local olibdir="/usr/lib32/"
	if [ "$XBPS_TARGET_WORDSIZE" = "32" ]; then
		olibdir="/usr/lib64/"
	fi
	case "${arch}" in
		aarch64) oarchs="armv6l armv7l";;
		armv[67]l) oarchs="aarch64";;
		x86_64) oarchs="i686";;
		i686) oarchs="x86_64";;
		ppc64le) oarchs="ppcle";;
		ppc64) oarchs="ppc";;
		ppcle) oarchs="ppc64le";;
		ppc) oarchs="ppc64";;
		*) ;; # no counterparts
	esac
	for oarch in $oarchs; do
		for icd in ${DESTDIR}/usr/share/vulkan/icd.d/*_icd.${arch}.json; do
			sed "s#/usr/lib${XBPS_TARGET_WORDSIZE}/#${olibdir}#g" \
				${icd} > ${icd/.${arch}/.${oarch}}
		done
	done

	ln -srv ${DESTDIR}/usr/lib/libGLX_amber.so.0.0.0 ${DESTDIR}/usr/lib/libGLX_indirect.so.0.0.0
	ln -srv ${DESTDIR}/usr/lib/libGLX_amber.so.0.0.0 ${DESTDIR}/usr/lib/libGLX_indirect.so.0
}

libglapi-amber_package() {
	# this dependency is wrong, it was added as a hack to allow updating
	# systems with libglapi-32bit after the switch to glvnd
	# see 927f17347f9c646047c65312c8e8ce1ad88b7832
	# it can be removed when glibc multilib (with *-32bit packages) is removed
	depends="libglvnd"
	replaces="libglapi>=0"
	provides="libglapi-${version}_${revision}"
	conflicts="libglapi"
	shlib_provides="libglapi.so.0"
	short_desc="Free implementation of the GL API - shared library"
	pkg_install() {
		vmove "usr/lib/libglapi.so.*"
	}
}

libgbm-amber_package() {
	short_desc="Mesa Generic buffer management API - runtime"
	replaces="libgbm>=0"
	provides="libgbm-${version}_${revision}"
	conflicts="libgbm"
	shlibs_provides="libgbm.so.1"
	pkg_install() {
		vmove "usr/lib/libgbm.so.*"
	}
}

libgbm-amber-devel_package() {
	short_desc="Mesa generic buffer managerment API - development files"
	depends="libgbm-amber>=${version}_${revision}"
	replaces="libgbm-devel>=0"
	provides="libgbm-devel-${version}_${revision}"
	conflicts="libgbm-devel"
	pkg_install(){
		vmove "usr/include/gbm.h"
		vmove "usr/lib/libgbm.so"
		vmove "usr/lib/pkgconfig/gbm.pc"
	}
}

libOSMesa-amber_package() {
	short_desc="Mesa Off-Screen interface library"
	replaces="libOSMesa>=0"
	provides="libOSMesa-${version}_${revision}"
	conflicts="libOSMesa"
	shlibs_provides="libOSMesa.so.8"
	pkg_install() {
		vmove "usr/lib/libOSMesa.so.*"
	}
}

MesaLib-amber-devel_package() {
	depends="mesa-amber-${version}_${revision} libOSMesa-amber-${version}_${revision} 
 libgbm-amber-${version}_${revision} libdrm-devel libglvnd-devel libunwind-devel"
	short_desc+=" - development files"
	replaces="MesaLib-devel>=0"
	provides="MesaLib-devel-${version}_${revision}"
	conflicts="MesaLib-devel"
	pkg_install() {
		vmove "usr/include"
		vmove "usr/lib/pkgconfig"
		vmove "usr/lib/libEGL_amber.so"
		vmove "usr/lib/libOSMesa.so"
		vmove "usr/lib/libglapi.so"
	}
}

mesa-amber-dri_package() {
	short_desc="Mesa DRI drivers"
	depends="mesa-amber-${version}_${revision}"
	replaces="mesa-dri>=0"
	provides="mesa-dri-${version}_${revision}"
	conflicts="mesa-dri"
	shlib_provides="i830_dri.so i915_dri.so i965_dri.so kms_swrast_dri.so nouveau_vieux_dri.so r200_dri.so radeon_dri.so swrast_dri.so"
	shlib_provides+="libgallium_dri.so" # workaround for mesa-dri-32bit
	pkg_install() {
		vmove usr/lib/dri
	}
}

mesa-amber-vulkan-intel_package() {
	short_desc="Mesa Intel Vulkan driver"
	replaces="mesa-vulkan-intel>=0"
	provides="mesa-vulkan-intel-${version}_${revision}"
	conflicts="mesa-vulkan-intel"
	shlib_provides="libvulkan_intel.so"
	pkg_install() {
		vmove "usr/share/vulkan/icd.d/intel_icd*.json"
		vmove "usr/lib/libvulkan_intel.so"
	}
}

mesa-amber-vulkan-radeon_package() {
	short_desc="Mesa Radeon Vulkan driver"
	replaces="mesa-vulkan-radeon>=0"
	provides="mesa-vulkan-radeon-${version}_${revision}"
	conflicts="mesa-vulkan-radeon"
	shlib_provides="libvulkan_radeon.so"
	pkg_install() {
		vmove "usr/share/vulkan/icd.d/radeon_icd*.json"
		vmove "usr/lib/libvulkan_radeon.so"
	}
}

mesa-amber-vulkan-overlay-layer_package() {
	short_desc="Vulkan layer to display information about the running application"
	replaces="mesa-vulkan-overlay-layer>=0"
	provides="mesa-vulkan-overlay-layer-${version}_${revision}"
	conflicts="mesa-vulkan-overlay-layer"
	pkg_install() {
		vmove "usr/share/vulkan/explicit_layer.d/VkLayer_*.json"
		vmove "usr/share/vulkan/implicit_layer.d/VkLayer_*.json"
		vmove "usr/bin/mesa-overlay-control.py"
		vmove "usr/lib/libVkLayer_*.so"
	}
}

mesa-amber-ati-dri_package() {
	build_style=meta
	lib32mode=full
	short_desc="Mesa DRI drivers for ATI GPUs (transitional dummy package)"
	depends="mesa-amber-dri mesa-amber-vulkan-radeon"
	replaces="mesa-ati-dri>=0"
	provides="mesa-ati-dri-${version}_${revision}"
	conflicts="mesa-ati-dri"
}

mesa-amber-intel-dri_package() {
	build_style=meta
	lib32mode=full
	short_desc="Mesa DRI drivers for Intel GPUs (transitional dummy package)"
	depends="mesa-amber-dri mesa-amber-vulkan-intel"
	replaces="mesa-intel-dri>=0"
	provides="mesa-intel-dri-${version}_${revision}"
	conflicts="mesa-intel-dri"
}

mesa-amber-nouveau-dri_package() {
	build_style=meta
	lib32mode=full
	short_desc="Mesa DRI drivers for NVIDIA GPUs (transitional dummy package)"
	depends="mesa-amber-dri"
	replaces="mesa-noveau-dri>=0"
	provides="mesa-noveau-dri-${version}_${revision}"
	conflicts="mesa-noveau-dri"
}

